-----------------------------------------------------描述: 玩家器灵网络消息处理及其逻辑--时间: 2012.4.20--作者: xxj---------------------------------------------------MsgNimbus = {}local p = MsgNimbus;p.PARTS_MSG_EYES_ENABLE = 1;  --激活阵眼p.PARTS_MSG_CAST_PARTS  = 2;  --器灵重铸造p.PARTS_MSG_SELL_PARTS  = 3;  --出售器灵p.PARTS_MSG_BUY_CHIPS   = 4;  --购买灵气function p.SendNimbusAction(btAction,idEquip,btLockAttr,nBuyChipsAmount)   LogInfo("p.SendNimbusAction[%d][%d][%d]",btAction,idEquip,btLockAttr);  local netdata = createNDTransData(NMSG_Type._MSG_NIMBUS);  if nil == netdata then	LogInfo("发送合成消息失败,内存不够");	return false;  end  netdata:WriteByte(btAction);  netdata:WriteInt(idEquip);    netdata:WriteByte(btLockAttr);   netdata:WriteInt(nBuyChipsAmount);  SendMsg(netdata);  netdata:Free();  ShowLoadBar();  return true;end-- 网络消息处理function p.ProcessNumbusInfo(netdata)    LogInfo("p.ProcessNumbusInfo");   CloseLoadBar();   local btAction=netdata:ReadByte();   local idEquip = netdata:ReadInt();   local btLockAttr = netdata:ReadByte();   local nBuyChipSAmount = netdata:ReadInt();       LogInfo("btAction="..btAction);   LogInfo("idEquip="..idEquip);   LogInfo("btLockAttr="..btLockAttr);   LogInfo("nBuyChipSAmount="..nBuyChipSAmount);      if btAction == p.PARTS_MSG_EYES_ENABLE then	 if IsUIShow(NMAINSCENECHILDTAG.PlayerNimbusUI) then	   PlayerNimbusUI.RefreshRecastLayer();	 end     elseif btAction == p.PARTS_MSG_CAST_PARTS then	 	    elseif btAction == p.PARTS_MSG_SELL_PARTS then     if btLockAttr == 0 then	   ItemUser.DelQiLinItem(GetPlayerId(),idEquip);	   if IsUIShow(NMAINSCENECHILDTAG.PlayerNimbusUI) then	     PlayerNimbusUI.DelItemFramePartsBag(idEquip);	   end	 elseif btLockAttr == 1 then	   ItemInlay.DelQiLinItem(nBuyChipSAmount,idEquip)	   local weapId = ItemFunc.GetItemIdByPosition(ItemPet.GetEquipItemList(GetPlayerId(), nBuyChipSAmount),Item.POSITION_EQUIP_2);	   if weapId ~= 0 then	     ItemInlay.DelQiLinItem(weapId,idEquip)	   end	   if IsUIShow(NMAINSCENECHILDTAG.PlayerNimbusUI) then	     PlayerNimbusUI.DelInlayFrameWeap(nBuyChipSAmount,idEquip);	   end	 end   end   end-- 网络消息处理RegisterNetMsgHandler(NMSG_Type._MSG_NIMBUS, "p.ProcessNumbusInfo", p.ProcessNumbusInfo);