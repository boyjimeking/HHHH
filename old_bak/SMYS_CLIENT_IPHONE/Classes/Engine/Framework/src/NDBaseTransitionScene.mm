/* *  NDBaseTransitionScene.mm *  DragonDrive * *  Created by jhzheng on 11-7-18. *  Copyright 2011 __MyCompanyName__. All rights reserved. * */#include "NDBaseTransitionScene.h"#include "CGPointExtension.h"#include "CCTouchDispatcher.h"#include "CCDirector.h"#include "NDDirector.h"@implementation CCTransitionScene(ND)-(id) initWithDuration:(ccTime) t scene:(CCScene*)s{	NSAssert( s != nil, @"Argument scene must be non-nil");		if( (self=[super init]) ) {			//_delegate = NULL;				duration_ = t;				// retain		inScene_ = [s retain];		outScene_ = [[CCDirector sharedDirector] runningScene];		[outScene_ retain];				//NSAssert( inScene != outScene, @"Incoming scene must be different from the outgoing scene" );				// disable events while transitions		[[CCTouchDispatcher sharedDispatcher] setDispatchEvents: NO];				[self sceneOrder];	}	return self;}/*-(void) finish{	[inScene setVisible:YES];	[inScene setPosition:ccp(0,0)];	[inScene setScale:1.0f];	[inScene setRotation:0.0f];	[inScene.camera restore];		[outScene setVisible:NO];	[outScene setPosition:ccp(0,0)];	[outScene setScale:1.0f];	[outScene setRotation:0.0f];	[outScene.camera restore];		[self setNewScene:0];}*/-(void) setNewScene: (ccTime) dt{	[self unschedule:_cmd];		CCDirector *director = [CCDirector sharedDirector];		[director popScene];		[outScene_ setVisible:YES];		// enable events while transitions	[[CCTouchDispatcher sharedDispatcher] setDispatchEvents: YES];		NDEngine::NDDirector::DefaultDirector()->TransitionAnimateComplete();}-(void) onEnter{	[super onEnter];	[inScene_ onEnter];}-(void) onExit{	[super onExit];	[outScene_ onExit];}-(void) cleanup{	[super cleanup];}@end