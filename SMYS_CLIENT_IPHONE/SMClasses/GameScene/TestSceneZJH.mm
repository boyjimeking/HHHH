/* *  TestSceneZJH.mm *  SMYS * *  Created by jhzheng on 12-2-13. *  Copyright 2012 __MyCompanyName__. All rights reserved. * */#include "TestSceneZJH.h"#include "NDDirector.h"#include "UIScrollView.h"#include "UIRoleNode.h"#include "NDUIImage.h"#include "NDUtility.h"#include "UINpcDlg.h"#include "UIHyperlink.h"#include "NDUILoad.h"#include "UIEdit.h"#include "ScriptGameLogic.h"#include "ItemImage.h"#include "UISpriteNode.h"IMPLEMENT_CLASS(TestSceneZJH, NDScene)TestSceneZJH* TestSceneZJH::Scene(){	TestSceneZJH *scene = new TestSceneZJH;	scene->Initialization();	return scene;}TestSceneZJH::TestSceneZJH(){	m_btnTest			= NULL;	m_btnClose			= NULL;}TestSceneZJH::~TestSceneZJH(){}CUISpriteNode* sprite =NULL;void TestSceneZJH::Initialization(){	NDScene::Initialization();		CGSize winsize = NDDirector::DefaultDirector()->GetWinSize();		NDUILayer *layerBack = new NDUILayer;	layerBack->Initialization();	layerBack->SetFrameRect(CGRectMake(0, 0, winsize.width, winsize.height));	layerBack->SetBackgroundColor(ccc4(255, 255, 255, 255));	//layerBack->SetBackgroundImage(pic, true);	this->AddChild(layerBack);		NDUIButton*btn = new NDUIButton;	btn->Initialization();	btn->SetFrameRect(CGRectMake(0, 0, 80, 80));	btn->SetBackgroundPicture(ItemImage::GetSMItem(405), NULL);	btn->SetDelegate(this);	btn->CloseFrame();	layerBack->AddChild(btn);			sprite = new CUISpriteNode;	sprite->Initialization();	sprite->ChangeSprite(GetAniPath("model_10.spr"));	sprite->SetPlayFrameRange(0, 1);	sprite->SetFrameRect(CGRectMake(0, 0, winsize.width, winsize.height));	layerBack->AddChild(sprite);		return;		float btnWidth		= 40 * 2;	float btnHeight		= 40;	m_btnClose = new NDUIButton;	m_btnClose->Initialization();	m_btnClose->SetFrameRect(CGRectMake(winsize.width - btnWidth, 0, btnWidth, btnHeight));	m_btnClose->SetDelegate(this);	layerBack->AddChild(m_btnClose);		/*	{		CGRect rect= CGRectMake(400, 300, btnWidth * 4, btnHeight);		CUIScrollViewContainer *container = new CUIScrollViewContainer;		container->Initialization();		container->SetStyle(UIScrollStyleHorzontal);		container->SetCenterAdjust(true);		container->SetViewSize(CGSizeMake(btnWidth, btnHeight));		container->SetFrameRect(rect);		container->SetLeftReserveDistance(rect.size.width / 2 + btnWidth / 2);		container->SetRightReserveDistance(rect.size.width / 2 - btnWidth / 2);		container->SetBackgroundColor(ccc4(0, 0, 0, 255));		layerBack->AddChild(container);				const char* text[6] =		{			"一",			"二",			"三",			"四",			"五",			"六"		};				for (int i = 0; i < 6; i++) 		{			CUIScrollView* view = new CUIScrollView;			view->Initialization(false);			view->SetViewId(i);			container->AddView(view);						NDUIButton* btn = new NDUIButton;			btn->Initialization();			btn->SetFrameRect(CGRectMake(0, 0, btnWidth, btnHeight));			btn->SetDelegate(this);			btn->SetTitle(text[i]);			view->AddChild(btn);		}				container->ShowViewByIndex(0);	}	*/	CUIEdit* edit = new CUIEdit;	edit->Initialization();	edit->SetFrameRect(CGRectMake(10, 250, 60, 20));	edit->SetImage(NDPicturePool::DefaultPool()->AddPicture(GetSMImgPath("btn_disable.png")));	edit->SetPassword(true);	edit->EnableAdjustView(true);	layerBack->AddChild(edit);		return;		{		CGRect rect= CGRectMake(0, 0, 212, 196);		CUIScrollViewContainer *container = new CUIScrollViewContainer;		container->Initialization();		container->SetStyle(UIScrollStyleVerical);		container->SetFrameRect(rect);		container->SetTopReserveDistance(rect.size.height);		container->SetBottomReserveDistance(rect.size.height);		container->SetViewSize(rect.size);		layerBack->AddChild(container);				NDUILoad load2;		load2.LoadLua("RoleBag_R.ini", container, LuaObject(), 0, 0);				CGRect rectview = rect;		rectview.origin = CGPointZero;				for (int i = 1; i < 3; i++) 		{			CUIScrollView* view = new CUIScrollView;			view->Initialization(false);			view->SetScrollStyle(UIScrollStyleVerical);			view->SetFrameRect(rectview);			view->SetViewId(i);			view->SetMovableViewer(container);			view->SetScrollViewer(container);			view->SetContainer(container);			container->AddView(view);						NDUILoad load;			load.LoadLua("RoleBag_R_List.ini", view, LuaObject(), 0, 0);		}	}			return;		CGRect rectScrollContainer = CGRectMake(50, 50, 80, 200);	CUIScrollViewContainer *scrollContainer = new CUIScrollViewContainer;	scrollContainer->Initialization();	scrollContainer->SetStyle(UIScrollStyleVerical);	scrollContainer->SetFrameRect(rectScrollContainer);	scrollContainer->SetViewSize(CGSizeMake(80, 20));	scrollContainer->SetLeftReserveDistance(rectScrollContainer.size.width);	scrollContainer->SetRightReserveDistance(rectScrollContainer.size.width);	scrollContainer->SetBackgroundColor(ccc4(0, 0, 0, 255));	layerBack->AddChild(scrollContainer);		const char* text[5] =	{		"这是测试一",		"这是测试二",		"这是测试三",		"这是测试四",		"这是测试五",	};		for (int i = 0; i < 5; i++) 	{		CUIScrollView* view = new CUIScrollView;		view->Initialization(false);		view->SetScrollStyle(UIScrollStyleVerical);		view->SetFrameRect(CGRectMake(0, 0, 80, 20));		view->SetViewId(100+i);		view->SetMovableViewer(scrollContainer);		view->SetScrollViewer(scrollContainer);		view->SetContainer(scrollContainer);		scrollContainer->AddView(view);		/*		NDUILabel *lb = new NDUILabel;		lb->Initialization();		lb->SetFrameRect(CGRectMake(0, 0, 80, 80));		lb->SetTextAlignment(LabelTextAlignmentLeft);		lb->SetText(text[i]);		view->AddChild(lb);*/		CUIHyperlinkButton *btn = new CUIHyperlinkButton;		btn->Initialization();		btn->SetFrameRect(CGRectMake(0, 0, 80, 20));		btn->SetLinkBoundRect(CGRectMake(0, 0, 80, 20));		btn->SetLinkTextFontSize(14);		btn->SetLinkTextColor(ccc4(255, 0, 0, 255));		btn->SetLinkText(text[i]);		view->AddChild(btn);	}		/*	 CGRect rectContainer = CGRectMake(10, 100, 460, 200);	 CUIScrollContainer *container = new CUIScrollContainer;	 container->Initialization();	 container->SetBackgroundColor(ccc4(0, 255, 0, 255));	 container->SetFrameRect(rectContainer);	 container->SetLeftReserveDistance(10);	 container->SetRightReserveDistance(10);	 container->SetTopReserveDistance(10);	 container->SetBottomReserveDistance(10);	 layerBack->AddChild(container);	 	 	 CUIScroll *layerMove = new CUIScroll;	 layerMove->Initialization(true);	 layerMove->SetBackgroundColor(ccc4(0, 0, 0, 125));	 layerMove->SetFrameRect(CGRectMake(10, 10, 80, 40));	 //layerBack->AddChild(layerMove);	 layerMove->SetMovableViewer(container);	 container->AddChild(layerMove);	 	 m_btnTest = new NDUIButton;	 m_btnTest->Initialization();	 m_btnTest->SetFrameRect(CGRectMake(10, 10, 40, 20));	 m_btnTest->SetDelegate(this);	 layerMove->AddChild(m_btnTest);	 	 {	 CUIScroll *layerMove = new CUIScroll;	 layerMove->Initialization(true);	 layerMove->SetBackgroundColor(ccc4(0, 0, 0, 125));	 layerMove->SetFrameRect(CGRectMake(0, 0, 400, 40));	 layerMove->SetScrollStyle(UIScrollStyleHorzontal);	 layerMove->SetMovableViewer(container);	 layerMove->SetContainer(container);	 container->AddChild(layerMove);	 	 NDUIButton *btnTest = new NDUIButton;	 btnTest->Initialization();	 btnTest->SetFrameRect(CGRectMake(0, 0, 80, 20));	 btnTest->SetDelegate(this);	 layerMove->AddChild(btnTest);	 	 btnTest = new NDUIButton;	 btnTest->Initialization();	 btnTest->SetFrameRect(CGRectMake(320, 20, 80, 20));	 btnTest->SetDelegate(this);	 layerMove->AddChild(btnTest);	 }	 */	 /*	 CUIRoleNode *role = new CUIRoleNode;	 role->Initialization();	 role->ChangeLookFace(111100000);	 role->SetFrameRect(CGRectMake(100, 100, 100, 100));	 layerBack->AddChild(role);	 	 	 NDPicturePool& pool = *(NDPicturePool::DefaultPool());	 NDUIImage *img =  new NDUIImage;	 img->Initialization();	 img->SetPicture(pool.AddPicture(GetImgPath("10819.png")), true);	 img->SetFrameRect(CGRectMake(0, 0, 40, 41));	 layerBack->AddChild(img);	 	img = new NDUIImage;	img->Initialization();	img->SetPicture(pool.AddPicture(GetImgPath("10819.png")), true);	img->SetFrameRect(CGRectMake(40, 41, 400, 120));	layerBack->AddChild(img);	*/	CUINpcDlg* dlg = new CUINpcDlg;	dlg->Initialization(123);	dlg->SetTitle("包小白");	dlg->SetContent("<cff0000包小白/e就是小包");	dlg->SetInfo("<cff0000经验:/e<c00ff005/e");	dlg->AddOption("<cff0000岁月/e如歌", 3);	dlg->AddOption("人生如梦", 4);		}void TestSceneZJH::OnButtonClick(NDUIButton* button){	sprite->SetPlayFrameRange(1, 2);	if (button == m_btnTest)	{		NDLog(@"\nTest Button Click!");	}	else if (button == m_btnClose)	{		NDDirector::DefaultDirector()->PopScene();	}}bool TestSceneZJH::OnButtonDragOut(NDUIButton* button, CGPoint beginTouch, CGPoint moveTouch, bool longTouch){	if (button == m_btnTest)	{		NDLog(@"\nTest Button DragOut!");		return true;	}		return false;}