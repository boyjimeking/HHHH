/* *  TestNewUI.mm *  DragonDrive * *  Created by jhzheng on 11-8-12. *  Copyright 2011 __MyCompanyName__. All rights reserved. * */#include "TestNewUI.h"#include "NDDirector.h"#include "CGPointExtension.h"#include "NDUtility.h"enum {	ePlayerInfoBegin = 0,	ePlayerInfoBag = ePlayerInfoBegin,	ePlayerInfoAttr,	ePlayerInfoSkill,	ePlayerInfoTask,	ePlayerInfoFarm,	ePlayerInfoEnd,};IMPLEMENT_CLASS(TestNewUI, NDCommonScene)TestNewUI* TestNewUI::Scene(){	TestNewUI *scene = new TestNewUI;		scene->Initialization();		return scene;}TestNewUI::TestNewUI(){}TestNewUI::~TestNewUI(){}void TestNewUI::Initialization(){	NDCommonScene::Initialization();		const char * tabtext[ePlayerInfoEnd] = 	{		"背包", "属性", "技能", "任务", "庄园"	};		NDPicturePool& pool = *(NDPicturePool::DefaultPool());		for (int i = ePlayerInfoBegin; i < ePlayerInfoEnd; i++) 	{		TabNode* tabnode = this->AddTabNode();				tabnode->SetImage(pool.AddPicture(GetImgPathBattleUI("item_bg.png")), 						  pool.AddPicture(GetImgPathBattleUI("item_bg_focused.png")),						  pool.AddPicture(GetImgPathBattleUI("tab_focused_tab.png")));				tabnode->SetText(tabtext[i]);				tabnode->SetTextColor(ccc4(251, 222, 63, 255));				tabnode->SetTextFontSize(18);	}		ccColor4B testColor[ePlayerInfoEnd] =	{		ccc4(255, 0, 0, 255),		ccc4(255, 255, 0, 255),		ccc4(0, 255, 0, 255),		ccc4(0, 255, 255, 255),		ccc4(0, 0, 255, 255),	};		for (int i = ePlayerInfoBegin; i < ePlayerInfoEnd; i++) 	{		//CGSize winsize = NDDirector::DefaultDirector()->GetWinSize();				NDUIClientLayer* client = this->GetClientLayer(i);				if (i == ePlayerInfoAttr) 		{			NDFuncTab *tab = new NDFuncTab;			tab->Initialization(4, CGPointMake(0, 0));							  			for(int j =0; j<2; j++)			{				TabNode* tabnode = tab->GetTabNode(j);								NDPicture *pic = NDPicturePool::DefaultPool()->AddPicture(GetImgPathNew("newui_text.png"));				NDPicture *picFocus = NDPicturePool::DefaultPool()->AddPicture(GetImgPathNew("newui_text.png"));				int startX = (j == 0 ? 18*4 : 18*5);								pic->Cut(CGRectMake(startX, 36, 18, 36));				picFocus->Cut(CGRectMake(startX, 0, 18, 36));								tabnode->SetTextPicture(pic, picFocus);			}						NDUILayer *layer = new NDUILayer;						layer->Initialization();						layer->SetFrameRect(CGRectMake(50+2, 0, 50, 50));						layer->SetBackgroundColor(testColor[i]);						NDUIClientLayer*funcClient = tab->GetClientLayer(0);			funcClient->AddChild(layer);						layer = new NDUILayer;						layer->Initialization();						layer->SetFrameRect(CGRectMake(50+2, 0, 50, 50));						layer->SetBackgroundColor(testColor[i+1]);						funcClient = tab->GetClientLayer(1);						funcClient->AddChild(layer);									client->AddChild(tab);			continue;		}				CGSize parentSize = client->GetFrameRect().size;				VerticalTabLayer* tab = client->CreateFuncTab(0);				tab->SetTabNodeSize(CGSizeMake(34, 76));				CGRect rect;				rect.size = CGSizeMake(34, 76*2);				rect.origin= ccp(parentSize.width-34, (parentSize.height-rect.size.height)/2);				tab->SetFrameRect(rect);				for (int j=0; j < 2; j++) 		{			TabNode* tabnode = tab->CreateTabNode();						tabnode->SetImage(pool.AddPicture(GetImgPathBattleUI("item_bg.png")), 							  pool.AddPicture(GetImgPathBattleUI("item_bg_focused.png")));						std::string str = tabtext[i]; str.c_str();						if (j ==0) 				str += "1";			else				str += "2";						tabnode->SetText(str.c_str());						tabnode->SetTextColor(ccc4(251, 222, 63, 255));						tabnode->SetTextFontSize(15, false);		}						NDUILayer* funcLayer = client->GetFuncLayer(0);				NDUILayer *layer = new NDUILayer;				layer->Initialization();				layer->SetFrameRect(CGRectMake(50+2, 0, 50, 50));				layer->SetBackgroundColor(testColor[i]);				funcLayer->AddChild(layer);				funcLayer = client->GetFuncLayer(1);				layer = new NDUILayer;				layer->Initialization();				layer->SetFrameRect(CGRectMake(2*(50+2), 50, 50, 50));				layer->SetBackgroundColor(testColor[i]);				funcLayer->AddChild(layer);				client->SetFocusFuncTabIndex(1, false);	}		NDUILayer* commonLayer = this->CetGernalLayer(false, 1);		NDUILayer *layer = new NDUILayer;		layer->Initialization();		layer->SetFrameRect(CGRectMake(0, 150, 50, 50));		layer->SetBackgroundColor(ccc4(255, 0, 255, 255));		commonLayer->AddChild(layer);		this->SetTabFocusOnIndex(ePlayerInfoSkill, true);}void TestNewUI::OnButtonClick(NDUIButton* button){	if (OnBaseButtonClick(button)) return;}